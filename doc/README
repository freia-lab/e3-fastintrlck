The purpose of this sequencer program is to copy the post mortem data (PMD) 
from the fast interlock system (cRIO) and save the analog channels data in 
separate waveform pv - one for each channel.

 The outline of the algorithm is as follows:
1. wait for command to save the waveforms (either from the user or created
automatically).
2. Check if the conditions for starting copying the PMD data:
   a. The PMD is not running
   b. The interlock has been triggered by the analog data (otherwise the PMD
      is not reevant
   c. Check that the PMD is not running (reading the PMD data when the system 
      is storing  it in the ring buffer causes some problems on cRIO)
3. When all initial conditions are fullfilled copy the channels (selectable
   by a special PV) from the cRIO system to the local waveform PVs.
4. It would be nice to adjust the TIMESTAMP of the vaweform variable to the 
   trigger time latched in the cRIO.

Ad. 3 
     1. Set IntlkF-cRio1:PMD:cChan to desired channel
     2. Start the reading data to IntlkF-cRio1:PMD:sRdV by sending IntlkF-cRio1:PMD:cmdOn 
     3. Wait for all data to be transferred by checking the IntlkF-cRio1:PMD:cChan. When cChan == sChan the data is fully transfered
     4. Transfer data from IntlkF-cRio1:PMD:sRdV to the appropriate waveform PV

Needed PVs:
$(P):Chan$(I):sRdv - I from 0 to 15 MAXLEN 300000, REAL
$(P):cmdStart
$(P):ChanSel
$(P):Seq-status
$(P):
